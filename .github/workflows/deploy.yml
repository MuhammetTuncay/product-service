name: Deploy Laravel and Nginx to Docker Hub and EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Git authentication
        run: |
          git config --global url."https://${{ secrets.GITHUB_TOKEN }}@github.com/".insteadOf "https://github.com/"

      - name: Build and push Laravel app
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: muhammettncy/product-service:latest
          file: ./Dockerfile


      - name: SSH into EC2 and update containers
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

            # Create Docker network if not exists
            if ! docker network inspect app >/dev/null 2>&1; then
              docker network create app
            fi

            cd /home/ec2-user/product-service

            # Pull the latest Laravel backend image
            docker pull muhammettncy/product-service:latest
            docker stop phpserver_product_service || true
            docker rm phpserver_product_service || true
            docker run --detach --name phpserver_product_service --network app -p 9000:9000 muhammettncy/product-service:latest

            # Ensure the .env file exists inside the container
            if ! docker exec phpserver_product_service test -f /var/www/html/.env; then
              docker cp /home/ec2-user/env/.env phpserver_product_service:/var/www/html/.env
              echo ".env file copied to /var/www/html/.env inside the container."
            else
              echo ".env file already exists inside the container."
            fi

            # Pull the latest Nginx image
            docker pull muhammettncy/nginx:latest
            docker stop nginx || true
            docker rm nginx || true
            docker run --detach --name nginx --network app -p 80:80 muhammettncy/nginx:latest

            # Clean up unused dangling images
            docker image prune -f

            # Check logs
            docker logs nginx
            docker logs phpserver_product_service
